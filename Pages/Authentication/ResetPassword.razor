@page "/password/reset/{token1}"
@using StartupEd.Engine.MarketNetwork

<div class="d-flex flex-row-fluid flex-center">
    <div class="login-forgot">
        <div class="text-center mb-10 mb-lg-20">
            <h2 class="font-weight-bold">Forgotten Password ?</h2>
            <p class="text-muted font-weight-bold">
                Enter the email associated with your account. You will get an email to reset your password.
            </p>
        </div>
        <div class="form-group py-2 m-0 border-bottom">
            <input class="form-control h-auto border-0 px-0 placeholder-dark-75" @bind-value="@NewPassword" placeholder="New Password" name="password" type="password" autocomplete="off" />
        </div>
        <br />
        <div class="form-group py-2 m-0 border-bottom">
            <input class="form-control h-auto border-0 px-0 placeholder-dark-75" @bind-value="@ConfirmPassword" placeholder="Confirm Password" name="confirmpassword" type="password" autocomplete="off" />
        </div>
        <div class="form-group d-flex flex-wrap flex-center mt-10">
            <button type="submit" class="btn btn-primary btn-pill font-weight-bold px-9 py-4 my-3 mx-2" @onclick="SubmitModel">Update Password</button>
        </div>
    </div>
</div>

@code{

    private Authentication Model = new Authentication();
    private CS_Authentication ClientService { get; set; }
    private string NewPassword { get; set; }
    private string ConfirmPassword { get; set; }

    [Parameter]
    public string token1 { get; set; }


    private async void SubmitModel()
    {
        try
        {
            if (NewPassword != ConfirmPassword)
            {
                ToastService.ShowError("Password Mismatch!", "Confirm password mismatch..!");
                return;
            }
            else
            {
                ClientService = new CS_Authentication(ClientExchange, EngineServices.MarketNetwork);
                Model.Password = NewPassword;
                Model.UserName = "guest@gmail.com";
                var response = await ClientService.PutAsync(Model, "Reset/" + token1);
                if (response.IsSuccessStatusCode)
                {
                    string result = await response.Content.ReadAsStringAsync();
                    if (result == "true")
                    {
                        ToastService.ShowSuccess("Update Successful!", "Your Password Has Been Reset Successfully!");
                        navigationManager.NavigateTo("/reset-login/");
                        Console.WriteLine(result);
                    }
                    else
                    {
                        ToastService.ShowError("Updation Failed!", "Invalid Link");
                    }
                }
                else
                {
                    ToastService.ShowError("Updation Failed!", "Password Updation Failed!");
                }
            }

        }
        catch (Exception ex)
        {
            SLog.Write(ex);
        }
    }

    public string InputElementStyle { get; set; } = "h-auto border-0 px-0 placeholder-dark-75";
    public string FormElementStyle { get; set; } = "py-2 m-0 border-bottom";
}
