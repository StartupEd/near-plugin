@page "/incubationprogram/{Id}/{ProgramName}"
@inject IStripHTMLTags StripHTMLTags
@using Microsoft.AspNetCore.SignalR.Client
<Head Title="Incubation Programs" />

<div class="subheader py-2 py-lg-6 subheader-solid" id="kt_subheader">
    <div class="container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <!--begin::Info-->
        <div class="d-flex align-items-center flex-wrap mr-1">
            <!--begin::Page Heading-->
            <div class="d-flex align-items-baseline flex-wrap mr-5">
                <!--begin::Page Title-->
                <a href="/" class="text-dark font-weight-bold my-1 mr-5">Home</a>
                <!--end::Page Title-->
                <!--begin::Breadcrumb-->
                <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                    <li class="breadcrumb-item">
                        <a href="/incubationprogram" class="text-muted">Incubation Programs</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="incubationprogram/@Id/@ProgramName" class="text-muted">Detail</a>
                    </li>
                </ul>
                <!--end::Breadcrumb-->
            </div>
            <!--end::Page Heading-->
        </div>
    </div>
</div>

<div class="d-flex flex-column-fluid">
    <div class="container">
        <div class="card card-custom gutter-b ribbon ribbon-top">
            <div class="card-body">
                <div class="d-flex">
                    <div class="flex-shrink-0 mr-7 mt-lg-0 mt-3">
                        <a href="incubationprogram/@Model.Id/@Model.Name" class="symbol symbol-100">
                            @if (Model.Core.ImageUrl != null)
                            {
                                <img src="@Model.Core.ImageUrl" alt="coverImg">
                            }
                            else
                            {
                                <img src="https://s1.startuped.net/incubation_cloud/assets/media/users/default.jpg" alt="coverImg">

                            }
                        </a>
                    </div>
                    <div class="d-flex flex-column justify-content-between flex-grow-1">
                        <div class="d-flex justify-content-between align-items-center flex-wrap">
                            <div class="d-flex mr-3">
                                <a href="incubationprogram/@Model.Id/@Model.Name" class="text-dark-75 text-hover-primary font-size-h5 font-weight-bold mr-3">@Model.Name</a>
                            </div>
                            <div class="my-lg-0">
                                
                                    @if (Id != null && Model.DataProperty.Permissions.ContainsKey(UXUtility.LoggedInUser.Id))
                                    {
                                        <button type="button" class="btn btn-icon btn-light-secondary btn-hover-light-secondary mr-3" data-toggle="modal" data-target="#ShareWithConnections">
                                            <i class="fas fa-share-alt"></i>
                                        </button>
                                    }
                                
                                @if (Model.Core.CreatorId == UXUtility.LoggedInUser.Id || UXUtility.LoggedInUserRole == Roles.Root_SuperAdmin.ToString())
                                {
                                    <a id="programInsightLink" href="incubationprogram/@Model.Id/@Model.Name/insight" class="btn btn-primary btn-sm text-uppercase font-weight-bolder mt-5 mt-sm-0 mr-auto mr-sm-0 ml-sm-auto">Insight</a>
                                    <OneUX_DotToolbar>
                                        <ul class="navi navi-hover">
                                            <li class="navi-item">
                                                <a href="incubationprogram/@Model.Id/@Model.Name/edit" class="navi-link">
                                                    <span class="navi-icon"><i class="fas fa-pen"></i></span>
                                                    <span class="navi-text">Edit</span>
                                                </a>
                                            </li>
                                            <li class="navi-item">
                                                <a class="navi-link" @onclick="CallDeleteBPlanAlert" @onclick:preventDefault>
                                                    <span class="navi-icon"><i class="fas fa-trash"></i></span>
                                                    <span class="navi-text">Delete</span>
                                                </a>
                                            </li>
                                        </ul>
                                    </OneUX_DotToolbar>
                                }
                                else
                                {
                                    @if (Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.RegistrationStart) <= LocalDate && LocalDate <= Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.RegistrationEnd))
                                    {
                                        @if (ButtonClick == false)
                                        {
                                            <button type="button" id="incubationProgramRegisterBtn" class="btn btn-primary btn-sm text-uppercase font-weight-bolder mt-5 mt-sm-0 mr-auto mr-sm-0 ml-sm-auto" @onclick="ApplyButtonClick">Register</button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-primary btn-sm text-uppercase font-weight-bolder mt-5 mt-sm-0 mr-auto mr-sm-0 ml-sm-auto" disabled>Registered</button>
                                        }
                                    }
                                    else
                                    {
                                        <button type="button" id="programRegisterbtn" class="btn btn-primary btn-sm text-uppercase font-weight-bolder mt-5 mt-sm-0 mr-auto mr-sm-0 ml-sm-auto" disabled>Register</button>
                                    }
                                }
                            </div>
                        </div>
                        <div class="d-flex justify-content-start flex-wrap">
                            @*<p class="text-primary-50 font-weight-bold mr-lg-8 mr-5 mb-lg-0">
                                    <i class="flaticon2-new-email mr-2 font-size-lg text-primary-50"></i>@Model.Detail.EmailId
                                </p>*@
                            <p class="text-primary-50 font-weight-bold mr-lg-8 mr-5 mb-lg-0">
                                <i class="flaticon2-calendar-3 mr-2 font-size-lg text-primary-50"></i>
                                @foreach (var i in Model.Incubators)
                                {
                                    var name = i.Value;
                                    <text>@name&nbsp;</text>
                                }
                            </p>
                        </div>
                        <div class="d-flex justify-content-between flex-wrap">
                            <p class="text-primary-50 font-weight-bold mr-lg-8 mr-5 mb-lg-0">
                                <i class="flaticon-calendar-with-a-clock-time-tools mr-2 font-size-lg text-primary-50"></i>
                                @Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramStart).ToLocalTime().ToString("dd MMM yyyy") -
                                @Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramEnd).ToLocalTime().ToString("dd MMM yyyy")
                            </p>
                            @if (Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramStart) <= LocalDate && LocalDate <= Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramEnd))
                            {
                                Model.Core.IsActive = true;

                                <span class="btn btn-light-danger btn-sm font-weight-bold btn-upper btn-text">Program Started</span>
                            }
                            else if (LocalDate >= Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramEnd))
                            {
                                Model.Core.IsActive = false;
                                <span class="btn btn-light-danger btn-sm font-weight-bold btn-upper btn-text">Program Over</span>
                            }
                            else if (Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.RegistrationStart) <= LocalDate && LocalDate <= Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.RegistrationEnd))
                            {
                                <span class="btn btn-light-danger btn-sm font-weight-bold btn-upper btn-text">Registration Started</span>
                            }
                            else if (LocalDate >= Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.RegistrationEnd))
                            {
                                <span class="btn btn-light-danger btn-sm font-weight-bold btn-upper btn-text">Registration Over</span>
                            }
                            else if (LocalDate <= Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.RegistrationStart))
                            {
                                <span class="btn btn-light-danger btn-sm font-weight-bold btn-upper btn-text">Coming Soon</span>
                            }
                        </div>
                    </div>
                </div>
                <div class="separator separator-solid my-7"></div>
                <!--begin: Items-->
                <div class="d-flex align-items-center flex-wrap">
                    <!--begin: Item-->
                    <div class="d-flex align-items-center flex-lg-fill mr-5 my-1">
                        <span class="mr-4">
                            <i class="icon-2x text-dark-50 far fa-calendar-alt"></i>
                        </span>
                        <div class="d-flex flex-column text-dark-75">
                            <span class="font-weight-bolder font-size-sm">Days Left </span>
                            <span class="font-weight-bolder font-size-h5">
                                @if (Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramStart) > LocalDate)
                                {
                                    ProgramStatus = Model.Deadlines.ProgramStart.Subtract(DateTime.UtcNow).ToString("dd");
                                }
                                else if (Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramStart) <= LocalDate && Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramEnd) >= LocalDate)
                                {
                                    ProgramStatus = "Started";
                                }
                                else
                                {
                                    ProgramStatus = "Ended";
                                }
                                @ProgramStatus
                            </span>
                        </div>
                    </div>
                    <!--end: Item-->
                    <!--begin: Item-->
                    <div class="d-flex align-items-center flex-lg-fill mr-5 my-1">
                        <span class="mr-4"><i class="icon-2x text-dark-50 fas fa-users"></i></span>
                        <div class="d-flex flex-column text-dark-75">
                            <span class="font-weight-bolder font-size-sm">Registered Users</span>
                            <span class="font-weight-bolder font-size-h5">
                                @RegistrationModels.Count
                            </span>
                        </div>
                    </div>
                    <!--end: Item-->
                    <!--begin: Item-->
                    @if (Model.Charges != null)
                    {
                        <div class="d-flex align-items-center flex-lg-fill mr-5 my-1">
                            <div class="d-flex flex-column text-dark-75">
                                <span class="font-weight-bolder font-size-sm">Charges</span>
                                <span class="font-weight-bolder font-size-h5">
                                    @Model.Charges/-
                                </span>
                            </div>
                        </div>
                    }
                </div>
                <!--begin: Items-->
            </div>
        </div>


        <div class="row">
            @if (Model.Stages != null && Model.Stages.Count > 0)
            {
                <div class="col-lg-8">
                    <div class="card card-custom gutter-b">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="card-label">Stages</h3>
                            </div>
                        </div>
                        <div class="card-body">
                            <!--begin::Example-->
                            <div class="example example-basic">
                                <div class="example-preview">
                                    <!--begin::Timeline-->
                                    <div class="timeline timeline-3">
                                        <div class="timeline-items">
                                            @foreach (var Stage in Model.Stages)
                                            {
                                                <div class="timeline-item">
                                                    <div class="timeline-media">
                                                        <span class="svg-icon svg-icon-primary svg-icon-2x">
                                                            <!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2020-12-10-081610/theme/html/demo1/dist/../src/media/svg/icons/Cooking/Dish.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                                                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                                    <rect x="0" y="0" width="24" height="24" />
                                                                    <path d="M12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 Z M12,18 C15.3137085,18 18,15.3137085 18,12 C18,8.6862915 15.3137085,6 12,6 C8.6862915,6 6,8.6862915 6,12 C6,15.3137085 8.6862915,18 12,18 Z" fill="#000000" />
                                                                    <path d="M12,16 C14.209139,16 16,14.209139 16,12 C16,9.790861 14.209139,8 12,8 C9.790861,8 8,9.790861 8,12 C8,14.209139 9.790861,16 12,16 Z" fill="#000000" opacity="0.3" />
                                                                </g>
                                                            </svg><!--end::Svg Icon-->
                                                        </span>
                                                    </div>
                                                    <div class="timeline-content">
                                                        <div class="d-flex align-items-center justify-content-between mb-3">
                                                            <div class="mr-2">
                                                                <a class="text-dark-75 text-hover-primary font-weight-bold">@Stage.Name</a>

                                                                <span class="label label-light-danger font-weight-bolder label-inline ml-2">
                                                                    @if (Stage.StartDate.Date > DateTime.UtcNow.Date)
                                                                    {
                                                                        StageStatus = "Not Started Yet";
                                                                    }
                                                                    else if (Stage.StartDate.Date <= DateTime.UtcNow.Date && Stage.EndDate.Date >= DateTime.UtcNow.Date)
                                                                    {
                                                                        StageStatus = "Live";
                                                                    }
                                                                    else
                                                                    {
                                                                        StageStatus = "End";
                                                                    }
                                                                    @StageStatus
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <p class="p-0">@Stage.Description</p>
                                                        <div class="d-flex flex-wrap align-items-center py-2">
                                                            <div class="d-flex align-items-center mr-10">
                                                                <div class="mr-2">
                                                                    <div class="font-weight-bold mb-2"></div>
                                                                    <i class="icon-2x text-dark-50 ki ki-calendar"></i>
                                                                </div>
                                                                <div class="mr-4">
                                                                    <div class="font-weight-bold mb-2">Start Date</div>
                                                                    <span class="btn btn-sm btn-text btn-light-primary text-uppercase font-weight-bold">@Stage.StartDate.ToLocalTime().ToString("dd MMMM yy")</span>
                                                                </div>
                                                                <div class="mr-4">
                                                                    <div class="font-weight-bold mb-2">Due Date</div>
                                                                    <span class="btn btn-sm btn-text btn-light-danger text-uppercase font-weight-bold">@Stage.EndDate.ToLocalTime().ToString("dd MMMM yy")</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <!--end::Timeline-->
                                </div>
                            </div>
                            <!--end::Example-->
                        </div>
                    </div>
                </div>
            }
            @if (EventModels != null && EventModels.Count > 0)
            {
                <div class="col-lg-4">
                    <div class="card card-custom gutter-b">
                        <!--begin::Header-->
                        <div class="card-header border-0 pt-7">
                            <h3 class="card-title align-items-start flex-column">
                                <span class="card-label font-weight-bold font-size-h4 text-dark-75">List Of Events</span>
                            </h3>
                        </div>
                        <!--end::Header-->
                        <!--begin::Body-->
                        <div class="card-body pt-1">
                            <div class="tab-content mt-5" id="myTabLIist18">
                                <div class="tab-pane fade active show" id="kt_tab_pane_2_2" role="tabpanel" aria-labelledby="kt_tab_pane_2_2">
                                    <!--begin::Form-->
                                    <div class="form">
                                        @foreach (Events Model in EventModels)
                                        {
                                            <div class="d-flex align-items-center pb-9">
                                                <!--begin::Symbol-->
                                                <div class="symbol symbol-60 symbol-2by3 flex-shrink-0 mr-4">

                                                    @if (Model.Core.ImageUrl != null)
                                                    {
                                                        <div class="symbol-label" style="background-image: url(@Model.Core.ImageUrl)"></div>
                                                    }
                                                    else
                                                    {
                                                        <div class="symbol-label" style="background-image: url(https://s1.startuped.net/incubation_cloud/assets/media/users/default.jpg)"></div>
                                                    }
                                                </div>
                                                <!--end::Symbol-->
                                                <!--begin::Section-->
                                                <div class="d-flex flex-column flex-grow-1">
                                                    <!--begin::Title-->
                                                    <a href="event/detail/@Model.Id" class="text-dark-75 font-weight-bolder font-size-lg text-hover-primary mb-1">@Model.Name</a>
                                                    <!--end::Title-->
                                                    <!--begin::Desc-->
                                                    <span class="text-dark-50 font-weight-normal font-size-sm">
                                                        @if (Model.Core.Description.Length > 50)
                                                        {
                                                            Model.Core.Description = Model.Core.Description.Substring(0, 50) + "...";
                                                        }
                                                        else
                                                        {
                                                            Model.Core.Description = Model.Core.Description;
                                                        }
                                                        @StripHTMLTags.StripTagsCharArray(Model.Core.Description)
                                                    </span>
                                                    <!--begin::Desc-->
                                                </div>
                                                <!--end::Section-->
                                            </div>
                                        }
                                    </div>
                                    <!--end::Form-->
                                </div>
                            </div>
                        </div>
                        <!--end::Body-->
                    </div>
                </div>
            }
        </div>

        <div class="card card-custom gutter-b">
            <div class="card-header">
                <div class="card-title">
                    <h3 class="card-label">Description</h3>
                </div>
            </div>
            <div class="card-body">
                <p>@((MarkupString)Model.Core.Description)</p>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="card card-custom gutter-b card-stretch">
                    <!--begin::Header-->
                    <div class="card-header py-5">
                        <h3 class="card-title font-weight-bolder text-dark">Important Dates and Deadlines</h3>
                    </div>
                    <!--end::Header-->
                    <!--begin::Body-->
                    <div class="card-body d-flex flex-column p-0" style="position: relative;">
                        <div class="card-spacer bg-white flex-grow-1">
                            <!--begin::Row-->
                            <div class="row m-0">
                                <div class="col px-8 py-6 mr-8">
                                    <div class="font-size-sm text-muted font-weight-bold">Registration Starts</div>
                                    <div class="font-size-h4 font-weight-bolder">
                                        <i class="flaticon-calendar-with-a-clock-time-tools mr-2 font-size-lg text-primary-50"></i>
                                        @Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.RegistrationStart).ToLocalTime().ToString("dd MMM yy")
                                    </div>
                                </div>
                                <div class="col px-8 py-6">
                                    <div class="font-size-sm text-muted font-weight-bold">Registration Ends</div>
                                    <div class="font-size-h4 font-weight-bolder">
                                        <i class="flaticon-calendar-with-a-clock-time-tools mr-2 font-size-lg text-primary-50"></i>
                                        @Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.RegistrationEnd).ToLocalTime().ToString("dd MMM yy")
                                    </div>
                                </div>
                            </div>
                            <!--end::Row-->
                            <!--begin::Row-->
                            <div class="row m-0">
                                <div class="col px-8 py-6 mr-8">
                                    <div class="font-size-sm text-muted font-weight-bold">Program Starts</div>
                                    <div class="font-size-h4 font-weight-bolder">
                                        <i class="flaticon-calendar-with-a-clock-time-tools mr-2 font-size-lg text-primary-50"></i>

                                        @Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramStart).ToLocalTime().ToString("dd MMM yy")
                                    </div>
                                </div>
                                <div class="col px-8 py-6">
                                    <div class="font-size-sm text-muted font-weight-bold">Program Ends</div>
                                    <div class="font-size-h4 font-weight-bolder">
                                        <i class="flaticon-calendar-with-a-clock-time-tools mr-2 font-size-lg text-primary-50"></i>
                                        @Utility.ConvertUTCDateTimeToLocal(Model.Deadlines.ProgramEnd).ToLocalTime().ToString("dd MMM yy")
                                    </div>
                                </div>
                            </div>
                            <!--end::Row-->
                        </div>
                        <!--end::Stats-->
                        <div class="resize-triggers">
                            <div class="expand-trigger">
                                <div style="width: 560px; height: 199px;"></div>
                            </div>
                            <div class="contract-trigger"></div>
                        </div>
                    </div>
                    <!--end::Body-->
                </div>
            </div>
            @if (Model.ContactInfo != null)
            {
                <div class="col-lg-6">
                    <div class="card card-custom gutter-b">
                        <div class="card-header">
                            <div class="card-title">
                                <h3 class="card-label">Contact the Organisers</h3>
                            </div>
                        </div>
                        <!--begin::Body-->
                        <div class="card-body">
                            <div class="d-flex flex-wrap align-items-center">
                                <div class="d-flex align-items-center flex-lg-fill mr-5 my-1">
                                    <span class="mr-4">
                                        <span class="svg-icon svg-icon-primary svg-icon-2x">
                                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                                    <polygon points="0 0 24 0 24 24 0 24" />
                                                    <path d="M18,8 L16,8 C15.4477153,8 15,7.55228475 15,7 C15,6.44771525 15.4477153,6 16,6 L18,6 L18,4 C18,3.44771525 18.4477153,3 19,3 C19.5522847,3 20,3.44771525 20,4 L20,6 L22,6 C22.5522847,6 23,6.44771525 23,7 C23,7.55228475 22.5522847,8 22,8 L20,8 L20,10 C20,10.5522847 19.5522847,11 19,11 C18.4477153,11 18,10.5522847 18,10 L18,8 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
                                                    <path d="M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z" fill="#000000" fill-rule="nonzero" />
                                                </g>
                                            </svg>
                                        </span>
                                    </span>
                                    <div class="d-flex flex-column text-dark-75">
                                        <span class="font-weight-bolder font-size-sm">@Model.ContactInfo.Name</span>
                                        <span class="font-weight-bolder font-size-sm">@Model.ContactInfo.Email</span>
                                        <span class="font-weight-bolder font-size-h5">
                                            @Model.ContactInfo.PhoneNo
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--end::Body-->
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@if (Model.Id != null && Model.DataProperty.Permissions.ContainsKey(UXUtility.LoggedInUser.Id))
{
    <ShareModal SharedModel="Model" ObjectName="Incubation Program"/>
}

<OneUX_SweetAlertBox @ref="ConfirmSweetAlert" Header="Are you sure?" Text="You won't be able to revert this!" Type="warning" ButtonName="Yes, delete it!" OnButtonClickk="DeleteIncubationProgAsync" />


@code {
   

}


