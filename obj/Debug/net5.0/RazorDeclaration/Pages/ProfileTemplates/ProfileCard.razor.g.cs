// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace StartupEd.UX.Incubation.Pages.ProfileTemplates
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 13 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.Lib.Engine;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.Extensions.DependencyInjection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.Lib.Engine.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.Lib.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Shared.Layouts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Shared.Pages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 36 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 39 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.BPage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 40 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Others;

#line default
#line hidden
#nullable disable
#nullable restore
#line 41 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.InProgress;

#line default
#line hidden
#nullable disable
#nullable restore
#line 42 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Settings;

#line default
#line hidden
#nullable disable
#nullable restore
#line 43 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Invite;

#line default
#line hidden
#nullable disable
#nullable restore
#line 44 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.FeedPage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 45 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Chatting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 46 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Sidebar;

#line default
#line hidden
#nullable disable
#nullable restore
#line 47 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Milestone;

#line default
#line hidden
#nullable disable
#nullable restore
#line 48 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 49 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.ProfileTemplates;

#line default
#line hidden
#nullable disable
#nullable restore
#line 51 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One;

#line default
#line hidden
#nullable disable
#nullable restore
#line 52 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 54 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 55 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 56 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 57 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Maps;

#line default
#line hidden
#nullable disable
#nullable restore
#line 58 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Post;

#line default
#line hidden
#nullable disable
#nullable restore
#line 59 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Views.Card;

#line default
#line hidden
#nullable disable
#nullable restore
#line 60 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Views.Flix;

#line default
#line hidden
#nullable disable
#nullable restore
#line 61 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Views.Grid;

#line default
#line hidden
#nullable disable
#nullable restore
#line 62 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Views.List;

#line default
#line hidden
#nullable disable
#nullable restore
#line 63 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 64 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Composer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 65 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Reactions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 66 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 67 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.PdfViewer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 69 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout;

#line default
#line hidden
#nullable disable
#nullable restore
#line 70 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Base;

#line default
#line hidden
#nullable disable
#nullable restore
#line 71 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Aside;

#line default
#line hidden
#nullable disable
#nullable restore
#line 72 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Footer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 73 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Header;

#line default
#line hidden
#nullable disable
#nullable restore
#line 74 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Header.TopBar;

#line default
#line hidden
#nullable disable
#nullable restore
#line 78 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.SuperAdmin.Components.Feeds;

#line default
#line hidden
#nullable disable
#nullable restore
#line 79 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.SuperAdmin.Components.Cards;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/_Imports.razor"
using StartupEd.UX.One.Components.Custom.Cards;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Event;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/_Imports.razor"
using StartupEd.UX.Incubation.Pages.IncubationPrograms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Connections;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Grouping;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/ProfileCard.razor"
using StartupEd.Engine.MarketNetwork.Management;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/ProfileCard.razor"
using StartupEd.Engine.MarketNetwork.Inbox;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/ProfileCard.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
[Authorize]

#line default
#line hidden
#nullable disable
    public partial class ProfileCard : BaseComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 344 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/ProfileTemplates/ProfileCard.razor"
      
    private PersonalizeNoteModal ConfirmConnectionRequest { get; set; }
    private ReportModal ConfirmReportRequest { get; set; }
    [Parameter] public Dictionary<string, string> Tabs { get; set; }

    [Parameter] public Profile ProfileModel { get; set; }

    [Parameter] public User UserModel { get; set; }

    [Parameter] public string ConnectButton { get; set; }

    [Parameter] public EventCallback<string> OnClickCallBack { get; set; }

    private HubConnection notificationHubConnection;

    private string MessageValue { get; set; }
    private string ProfileOfUser { get; set; }
    private string Display { get; set; }
    private User_ClientService UserService { get; set; }
    private Profile_ClientService ProfileService { get; set; }

    private ConnectionRequest ConnectionModel = new ConnectionRequest();
    private ConnectionRequest_ClientService ConnectionService { get; set; }

    private ChatThread ThreadModel = new ChatThread();
    private ChatThread_ClientService ChatClientService { get; set; }

    private Report ReportModel = new Report();
    private Report_ClientService ReportService { get; set; }

    protected async override Task OnInitializedAsync()
    {
        ConnectionService = new ConnectionRequest_ClientService(EngineServices.MarketNetwork);
        notificationHubConnection = new HubConnectionBuilder().WithUrl(EngineServices.MarketNetwork.EndPoint + "/notificationhub").Build();
        await notificationHubConnection.StartAsync();
    }


    private bool IsConnected => notificationHubConnection.State == HubConnectionState.Connected;
    Task SendConnectNotification() => notificationHubConnection.SendAsync("SendNotification", UserModel.Core.Id, "You have new connection request.");

    Task SendAcceptedNotification() => notificationHubConnection.SendAsync("SendNotification", UXUtility.LoggedInUser.Id, UXUtility.LoggedInUser.Name + "  Is Now Your Connection.");


    protected void CallUserReportModal()
    {
        ConfirmReportRequest.ShowReportModal();
    }

    protected void EditUserProfile()
    {
        navigationManager.NavigateTo($"/root/user-profile/{UserModel.Core.Id}");
    }

    protected void GoToInboxPage()
    {
        navigationManager.NavigateTo($"/inbox/message/{UserModel.Core.Id}");
    }


    protected void CallConnectionAlertModal()
    {

        if (UXUtility.LoggedInUser.Id != null)
        {
            ConfirmConnectionRequest.ShowModal();
        }
        else
        {
            Navigation.NavigateTo($"login?returnUrl={Navigation.Uri}");
        }
    }


    #region ..Here Send personalize Message with connection request..!!
    protected async void SendConnectionRequest(bool IsValue)
    {
        try
        {
            ConnectionRequest EmailModel = new ConnectionRequest();

            ConnectionModel.FromUserId = UXUtility.LoggedInUser.Id;
            ConnectionModel.ToUserId = UserModel.Core.Id;

            EmailModel.RequestEmailModel.FromName = UXUtility.LoggedInUser.Name;
            EmailModel.RequestEmailModel.ToName = UserModel.Name;
            EmailModel.RequestEmailModel.ToEmail = UserModel.Email;
            if (!string.IsNullOrEmpty(MessageValue))
            {
                ConnectionModel.HasMessageRequest = true;
            }
            if (IsValue)
            {
                HttpResponseMessage response = await ConnectionService.PostAsync(ConnectionModel, "CreateRequest");
                if (response.IsSuccessStatusCode)
                {
                    if (!string.IsNullOrEmpty(MessageValue))
                    {
                        await SendMessageWithConnectionRequest();
                        MessageValue = "";
                    }
                    ToastService.ShowSuccess("Connection Request Sent..!", "Successful");
                    await OnClickCallBack.InvokeAsync(UserModel.Id);
                    bool result = await ConnectionService.ConnectionRequestEmailNotification(EmailModel);
                    // if (IsConnected) await SendConnectNotification();
                }
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message, "Connection Request Failed");
        }
    }
    protected async Task SendMessageWithConnectionRequest()
    {
        ChatClientService = new ChatThread_ClientService(EngineServices.MarketNetwork);
        try
        {
            HttpResponseMessage response;
            List<string> ParticipantIds = new List<string>();
            ParticipantIds.Add(UXUtility.LoggedInUser.Id);
            ParticipantIds.Add(UserModel.Core.Id);
            ThreadModel.ParticipantUserIds = ParticipantIds;
            if (!string.IsNullOrEmpty(MessageValue))
            {
                ThreadModel.Messages.Add(new ChatMessage { AuthorId = UXUtility.LoggedInUser.Id, Value = MessageValue, SentAt = DateTime.UtcNow });
            }
            response = await ChatClientService.PostAsync(ThreadModel, "CreateThread");
            if (response.IsSuccessStatusCode)
            {
                SLog.Write("Personalize Note Sending Success..!!");
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
        }
    }
    #endregion

    protected async void CancelSentRequestAsync()
    {
        ConnectionService = new ConnectionRequest_ClientService(EngineServices.MarketNetwork);
        ConnectionModel.FromUserId = UXUtility.LoggedInUser.Id;
        ConnectionModel.ToUserId = UserModel.Core.Id;
        var result = await ConnectionService.CancelConnectionRequestAsync(ConnectionModel);
        if (result == true)
        {
            ToastService.ShowInfo("Connection Request Canceled..!", "Canceled");
            await OnClickCallBack.InvokeAsync(UserModel.Core.Id);
        }
        else
        {
            ToastService.ShowError("Unble To Cancel Request!", "Error");
        }
    }

    protected async void AcceptRequestAsync()
    {
        try
        {
            ConnectionModel.FromUserId = ProfileModel.Core.CreatorId;
            ConnectionModel.ToUserId = UXUtility.LoggedInUser.Id;
            ConnectionModel.Status = ConnectionStatus.Accepted;
            var result = await ConnectionService.AcceptOrRejectConnectionRequestAsync(ConnectionModel);
            if (result == true)
            {
                ToastService.ShowSuccess("Connection Request Accepted..!", "Accepted");
                if (IsConnected) await SendAcceptedNotification();
                await OnClickCallBack.InvokeAsync(UserModel.Core.Id);
            }
            else
            {
                ToastService.ShowError("Unble To Respond Request!", "Error");
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
        }

    }

    protected async void RejectConnectionRequest()
    {
        try
        {
            ConnectionModel.FromUserId = ProfileModel.Core.CreatorId;
            ConnectionModel.ToUserId = UXUtility.LoggedInUser.Id;
            ConnectionModel.Status = ConnectionStatus.Rejected;
            var result = await ConnectionService.AcceptOrRejectConnectionRequestAsync(ConnectionModel);
            if (result == true)
            {
                ToastService.ShowInfo("Connection Request Rejected..!", "Rejected");
                await OnClickCallBack.InvokeAsync(UserModel.Core.Id);
            }
            else
            {
                ToastService.ShowError("Unble To Respond Request!", "Error");
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
        }
    }

    protected async void RemoveConnectionAsync()
    {
        try
        {
            ConnectionService = new ConnectionRequest_ClientService(EngineServices.MarketNetwork);
            ConnectionModel.FromUserId = UXUtility.LoggedInUser.Id;
            ConnectionModel.ToUserId = UserModel.Core.Id;
            ConnectionModel.Status = ConnectionStatus.Removed;
            var result = await ConnectionService.RemoveConnectionFromUserConnections(ConnectionModel);
            if (result == true)
            {
                ToastService.ShowSuccess("Connection Has Been Removed..!", "Successful");
                await OnClickCallBack.InvokeAsync(UserModel.Core.Id);
            }
            else
            {
                ToastService.ShowError("Unble To Respond Your Request!", "Error");
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
        }
    }

    protected async void SubmitBlockUserOnNetwork()
    {
        try
        {
            UserService = new User_ClientService(EngineServices.MarketNetwork);
            User User = new User();
            User.Id = UXUtility.LoggedInUser.Id;
            User.Core.Id = UXUtility.LoggedInUser.Id;
            User.BlockedIds.Add(UserModel.Id);

            HttpResponseMessage response = await UserService.PutAsync(User, "Block");
            if (response.IsSuccessStatusCode)
            {
                User.BlockedIds.Clear();
                ToastService.ShowSuccess("User Blocked!");
            }

        }
        catch (Exception e)
        {
            SLog.Write(e.Message);
        }
    }

    protected async void SubmitProfileReport(string Value)
    {
        try
        {
            ReportService = new Report_ClientService(EngineServices.MarketNetwork);
            if (!string.IsNullOrEmpty(Value))
            {
                ReportModel.Core.CreatorId = UXUtility.LoggedInUser.Id;
                ReportModel.ReportedId = UserModel.Core.Id;
                ReportModel.Content = Value.TrimEnd(';');
                HttpResponseMessage response = await ReportService.PostAsync(ReportModel, "CreateReport");
                if (response.IsSuccessStatusCode)
                {
                    ToastService.ShowSuccess("User Report has been submitted..");
                }
            }
            else
            {
                ToastService.ShowWarning("Please Select Option(s) to Report.", "Empty Option!");
            }
        }
        catch (Exception e)
        {
            SLog.Write(e.Message);
        }
    }

    protected async Task DeactivateUserAccount()
    {
        try
        {
            ProfileService = new Profile_ClientService(EngineServices.MarketNetwork);
            var result = await ProfileService.DeacticateUserProfileAsync(UserModel.Core.Id);
            if (result == true)
            {
                ToastService.ShowInfo("Account Has Been Deactivated!");
                await OnClickCallBack.InvokeAsync(UserModel.Core.Id);
            }
            else
            {
                throw new Exception("Exception: Account Deactivation Failed!");
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
        }
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager Navigation { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IVersionInfoService VersionService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService ToastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILoginService loginService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IServiceProvider MyServiceProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
