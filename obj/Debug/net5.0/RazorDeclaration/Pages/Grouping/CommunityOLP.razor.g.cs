// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace StartupEd.UX.Incubation.Pages.Grouping
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 13 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.Lib.Engine;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.Extensions.DependencyInjection;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.Lib.Engine.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.Lib.Core;

#line default
#line hidden
#nullable disable
#nullable restore
#line 22 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 23 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 24 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 25 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 26 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 27 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 31 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Shared.Layouts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 34 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Shared.Pages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 36 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 38 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Connections;

#line default
#line hidden
#nullable disable
#nullable restore
#line 39 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.BPage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 40 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Others;

#line default
#line hidden
#nullable disable
#nullable restore
#line 41 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.InProgress;

#line default
#line hidden
#nullable disable
#nullable restore
#line 42 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Settings;

#line default
#line hidden
#nullable disable
#nullable restore
#line 43 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Invite;

#line default
#line hidden
#nullable disable
#nullable restore
#line 44 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.FeedPage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 45 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Chatting;

#line default
#line hidden
#nullable disable
#nullable restore
#line 46 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Sidebar;

#line default
#line hidden
#nullable disable
#nullable restore
#line 47 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Milestone;

#line default
#line hidden
#nullable disable
#nullable restore
#line 48 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 49 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.Pages.ProfileTemplates;

#line default
#line hidden
#nullable disable
#nullable restore
#line 51 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One;

#line default
#line hidden
#nullable disable
#nullable restore
#line 54 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 55 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 56 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 57 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Maps;

#line default
#line hidden
#nullable disable
#nullable restore
#line 58 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Post;

#line default
#line hidden
#nullable disable
#nullable restore
#line 59 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Views.Card;

#line default
#line hidden
#nullable disable
#nullable restore
#line 60 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Views.Flix;

#line default
#line hidden
#nullable disable
#nullable restore
#line 61 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Views.Grid;

#line default
#line hidden
#nullable disable
#nullable restore
#line 62 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Views.List;

#line default
#line hidden
#nullable disable
#nullable restore
#line 63 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 64 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Composer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 65 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Reactions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 66 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 67 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Shared.PdfViewer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 69 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout;

#line default
#line hidden
#nullable disable
#nullable restore
#line 70 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Base;

#line default
#line hidden
#nullable disable
#nullable restore
#line 71 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Aside;

#line default
#line hidden
#nullable disable
#nullable restore
#line 72 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Footer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 73 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Header;

#line default
#line hidden
#nullable disable
#nullable restore
#line 74 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.One.Components.Layout.Header.TopBar;

#line default
#line hidden
#nullable disable
#nullable restore
#line 78 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.SuperAdmin.Components.Feeds;

#line default
#line hidden
#nullable disable
#nullable restore
#line 79 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
using StartupEd.UX.Incubation.SuperAdmin.Components.Cards;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/Grouping/_Imports.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/Grouping/_Imports.razor"
using StartupEd.Engine.MarketNetwork.Content;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/Grouping/_Imports.razor"
using StartupEd.UX.Incubation.Pages.Grouping;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/Grouping/_Imports.razor"
using StartupEd.UX.One.Components.Metronics.Base;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/Grouping/_Imports.razor"
using StartupEd.UX.One.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/_Imports.razor"
[Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/community/{GroupId}/{GroupName}")]
    public partial class CommunityOLP : BaseComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 207 "/Users/ankitbuti/workspace/bigapple_corev3/UXs/Incubation/Pages/Grouping/CommunityOLP.razor"
       
    private OneUX_SweetAlertBox ShowSweetAlertBox { get; set; }
    [Parameter] public string GroupId { get; set; }
    [Parameter] public string GroupName { get; set; }
    private bool IsVirtualize { get; set; } = false;
    private int PostCount { get; set; } = 0;
    private string deleteGroupId { get; set; }
    private Groups GroupDetail { get; set; } = new Groups();
    private Group_ClientService GroupService { get; set; }
    private UserActivity_ClientService Activity_ClientService { get; set; }

    private List<UserFullInfo> CommunityAllMembers { get; set; } = new List<UserFullInfo>();
    private User_ClientService UserService { get; set; }

    private Post GroupPost { get; set; } = new Post();
    private Post_ClientService PostService { get; set; }
    private List<User> UserConnections { get; set; } = new List<User>();
    //private Notification_ClientService NotificationClientService { get; set; }

    private HubConnection communityPosthubConnection;
    private HubConnection notificationcommunityPosthubConnection;

    protected enum LoadingContainerState { Loading, Loaded, Error }
    protected LoadingContainerState State;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await SyncLoggedInUserStatus();
            State = LoadingContainerState.Loading;
            UserService = new User_ClientService(EngineServices.MarketNetwork);
            GroupService = new Group_ClientService(EngineServices.MarketNetwork);
            PostService = new Post_ClientService(EngineServices.MarketNetwork);
            //NotificationClientService = new Notification_ClientService(EngineServices.MarketNetwork);
            Activity_ClientService = new UserActivity_ClientService(EngineServices.MarketNetwork);

            communityPosthubConnection = new HubConnectionBuilder().WithUrl(EngineServices.MarketNetwork.EndPoint + "/feedhub").Build();
            notificationcommunityPosthubConnection = new HubConnectionBuilder().WithUrl(EngineServices.MarketNetwork.EndPoint + "/notificationhub").Build();
            await notificationcommunityPosthubConnection.StartAsync();
            await communityPosthubConnection.StartAsync();

            GroupDetail = await GroupService.GetGroupsByIdAsync(GroupId);
            State = LoadingContainerState.Loaded;
            StateHasChanged();
            if (GroupDetail.MemberIds != null)
            {
                CommunityAllMembers = await UserService.GetUserAndProfileForListOfUserIds(GroupDetail.MemberIds);
            }
        }
        catch (NullReferenceException ex)
        {
            SLog.Write(ex.Message);
            State = LoadingContainerState.Error;
        }
    }

    protected async Task LoadGroupDetailsAsync(string groupId)
    {
        GroupDetail = await GroupService.GetGroupsByIdAsync(groupId);
        if (GroupDetail.MemberIds != null)
        {
            CommunityAllMembers = await UserService.GetUserAndProfileForListOfUserIds(GroupDetail.MemberIds);
        }
        IsVirtualize = true;
        State = LoadingContainerState.Loaded;
        StateHasChanged();
    }

    protected void TotalPostCounts(int value)
    {
        if (value >= 0)
        {
            PostCount = value;
        }
    }

    protected void CallDeleteGroupAlert(string groupId)
    {
        if (groupId != null)
        {
            deleteGroupId = groupId;
            ShowSweetAlertBox.ShowSweetAlert();
        }
    }

    protected async Task DeleteCommunity(bool value)
    {
        try
        {
            if (value)
            {
                GroupService = new Group_ClientService(EngineServices.MarketNetwork);
                HttpResponseMessage message = await GroupService.DeleteAsync(deleteGroupId);
                if (message.IsSuccessStatusCode)
                {
                    SLog.Write("Communty has been deleted!");
                    ToastService.ShowInfo("Community Deleted Successfuly");
                    navigationManager.NavigateTo("/community");
                }
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message, "Deletion Failed");
        }
    }

    private async Task JoinPublicGroup(string groupId)
    {
        try
        {
            Groups GroupInfo = new Groups();
            GroupInfo.Id = groupId;
            HttpResponseMessage response = await GroupService.PutAsync(GroupInfo, "JoinGroup");
            if (response.IsSuccessStatusCode)
            {
                await LoadGroupDetailsAsync(groupId);
                ToastService.ShowSuccess("Group Joined Successfully!");
                SLog.Write("User has joined group.." + groupId);
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
        }
    }

    private async Task LeaveGroupAsync(string groupId)
    {
        try
        {
            if (!string.IsNullOrEmpty(groupId))
            {
                Groups GroupInfo = new Groups();
                GroupInfo.Id = groupId;
                HttpResponseMessage response = await GroupService.PutAsync(GroupInfo, "LeaveGroup");
                if (response.IsSuccessStatusCode)
                {
                    await LoadGroupDetailsAsync(groupId);
                    SLog.Write("User has leaved group.." + groupId);
                    ToastService.ShowInfo("You have left community!");
                }
            }
            else
            {
                throw new Exception("Exception: Not Able To Leave Community!");
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
        }
    }

    private async Task RemoveMemberFromGroup(string memberId)
    {
        try
        {
            Groups GroupInfo = new Groups();
            GroupInfo.Id = GroupId;
            GroupInfo.Core.Id = GroupId;
            GroupInfo.MemberIds.Add(memberId);
            HttpResponseMessage response = await GroupService.PutAsync(GroupInfo, "RemoveMember");
            if (response.IsSuccessStatusCode)
            {
                await LoadGroupDetailsAsync(GroupId);
                ToastService.ShowInfo("Member Removed from Group..!");
                SLog.Write("Member has removed from group.." + memberId);
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
        }
    }

    protected async ValueTask<ItemsProviderResult<UserFullInfo>> LoadGroupsData(ItemsProviderRequest request)
    {
        return new ItemsProviderResult<UserFullInfo>(CommunityAllMembers.Skip(request.StartIndex).Take(request.Count), CommunityAllMembers.Count());
    }

    private void EditGroupInfo()
    {
        navigationManager.NavigateTo("community/" + GroupId + "/" + GroupName + "/edit");
    }


    private async Task SubmitGroupPost()
    {
        try
        {
            GroupPost.AuthorId = UXUtility.LoggedInUser.Id;
            GroupPost.Name = UXUtility.LoggedInUser.Name;
            GroupPost.GroupId = GroupId;
            GroupPost.IsCommunityPost = true;
            GroupPost.Summary = await JSRuntime.InvokeAsync<string>("getPostBoxValue", "ideaComposer_editor");
            if (GroupPost.Summary != "<p><br></p>")
            {
                HttpResponseMessage response = await PostService.PostAsync(GroupPost);
                if (response.IsSuccessStatusCode)
                {
                    if (IsConnected) await SendMessage();
                    ToastService.ShowSuccess("Post has been submitted.");

                    foreach (var MemberInfo in CommunityAllMembers)
                    {
                        if(MemberInfo.UserModel.Id!= UXUtility.LoggedInUser.Id)
                        {
                            //Notification NotificationModel = new Notification();
                            //NotificationModel.SenderId = UXUtility.LoggedInUser.Id;
                            //NotificationModel.ReceiverId = MemberInfo.UserModel.Id;
                            //NotificationModel.SentAt = DateTime.UtcNow;
                            //NotificationModel.NotificationType = "community";
                            //NotificationModel.Message = UXUtility.LoggedInUser.Name + " has posted on Community " + GroupDetail.Name;
                            //NotificationModel.Url = "community/detail/" + GroupId;
                            //await NotificationClientService.PostAsync(NotificationModel);
                            if (IsNotiConnected) await SendFeedNotification();
                        }
                    }

                    UserActivity userActivity = new UserActivity();
                    userActivity.Core.CreatorId = UXUtility.LoggedInUser.Id;
                    //userActivity.Activities.Add(new Activity{ FeatureId = GroupId, Feature = GroupDetail.Name, Description = "You have posted in community " + GroupDetail.Name });
                    await Activity_ClientService.SubmitUserRecentActivityAsync(userActivity);
                }
                else
                {
                    SLog.Write("Posting Failed");
                    ToastService.ShowError(response.ReasonPhrase, "Post Failed!");
                }
            }
        }
        catch (Exception ex)
        {
            SLog.Write(ex.Message);
            ToastService.ShowError(ex.Message, "Post Failed Exception");
        }
    }

    public bool IsConnected => communityPosthubConnection.State == HubConnectionState.Connected;
    Task SendMessage() => communityPosthubConnection.SendAsync("SendMessage");

    public bool IsNotiConnected => notificationcommunityPosthubConnection.State == HubConnectionState.Connected;
    Task SendFeedNotification() => notificationcommunityPosthubConnection.SendAsync("SendNotification", UXUtility.LoggedInUser.Id, "Feed");

    public void Dispose()
    {
        _ = communityPosthubConnection.DisposeAsync();
    }
    public void DisposeNotification()
    {
        _ = notificationcommunityPosthubConnection.DisposeAsync();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IVersionInfoService VersionService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService ToastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILoginService loginService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IServiceProvider MyServiceProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
